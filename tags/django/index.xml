<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>django on echen's blog</title><link>https://blog.echen.io/tags/django/</link><description>Recent content in django on echen's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.echen.io/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Web Development with Django</title><link>https://blog.echen.io/p/learning-web-development-with-django/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.echen.io/p/learning-web-development-with-django/</guid><description>&lt;img src="https://blog.echen.io/p/learning-web-development-with-django/django.jpeg" alt="Featured image of post Learning Web Development with Django" />&lt;p>I spent my last couple of months learning how to make websites with the Django framework. I have happened to pick up on a few things from working on it, and I want to give you a few resources on how to get started.&lt;/p>
&lt;p>This website (referring to my old site at &lt;a class="link" href="https://blog.echen.io" target="_blank" rel="noopener"
>blog.echen.io&lt;/a>) in particular was made using Django, a python web framework. It is not difficult to learn, and it helps if you are at least familiar with the class structure in python. It&amp;rsquo;s good for websites that require things like user log in, posting, and model-related work (versions of the same type of object). I wouldn&amp;rsquo;t recommend it for static websites or rather simple websites, as it might take more time than you want. If you look at any of my other websites, all of them are also written in Django, other than my homepage, which is a static site hosted on Amazon S3 and CloudFront. I&amp;rsquo;m familiar with Django, but not much else.&lt;/p>
&lt;h2 id="how-do-i-learn-django">How do I learn Django?&lt;/h2>
&lt;p>I learned Django by reading &lt;a class="link" href="https://djangoforbeginners.com/introduction/" target="_blank" rel="noopener"
>&amp;ldquo;Django for Beginners&amp;rdquo;&lt;/a> by Will Vincent. It&amp;rsquo;s really good and I highly recommend it. You should at least know python and a little bit of Linux shell scripting before you get started (and HTML and CSS, of course). Django itself uses python but you need a lot of commands to get stuff set up. After that, you&amp;rsquo;ll start to get a hang of Django development from reading the book.&lt;/p>
&lt;h3 id="is-it-useful">Is it useful?&lt;/h3>
&lt;p>Websites like BitBucket (Git Repository) use Django, and a lot of big companies use it too. Django developers are wanted by tech companies, and it&amp;rsquo;s a good framework to learn regardless. Other powerful frameworks include Express.js, which is based on Node.js, and Angular (Javascript branch). There are a lot, and Django is just one out of a whole collection. Another common python framework is Flask. Both are powerful, but Django has a little more customization and complexity.&lt;/p>
&lt;h2 id="what-do-i-do-after-i-make-a-project">What do I do after I make a project?&lt;/h2>
&lt;p>Will Vincent will tell you how to deploy Django projects to Heroku, an online service for deploying projects. It&amp;rsquo;s free for basic stuff, but it&amp;rsquo;s not a good long-term solution, mostly if you want your own domain. Learning how to deploy your Django projects will require you to grasp networking, like TCP/IP, working on a cloud server, and learning how to use reverse proxies and HTTP services like Gunicorn. A good tutorial is &lt;a class="link" href="https://www.google.com/search?q=nginx&amp;#43;gunicorn&amp;#43;django&amp;amp;oq=nginx&amp;#43;gunicorn&amp;#43;django&amp;amp;aqs=chrome..69i57j35i39j0l4j69i60j69i61.2694j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8" target="_blank" rel="noopener"
>here&lt;/a>. But don&amp;rsquo;t worry, this will come after you finish your projects. I recommend you use Amazon Web Services to deploy your projects, but that is quite complicated, to be frank. You can always search online for the easiest place to get a server for yourself.&lt;/p>
&lt;p>Will Vincent&amp;rsquo;s professional Django book will guide you through much more complex stuff, and there are still a lot of APIs (REST frameworks) that you can add to make your projects more complex. Both are a good read but finish the beginner book first. He never really goes into deployment, but you&amp;rsquo;ll know how to develop Django projects pretty extensively.&lt;/p>
&lt;p>A lot of your skills will come from messing up. I&amp;rsquo;ve spent days debugging issues. I have searched up thousands of questions on Google, but that is all part of the learning process. It will be frustrating, but it will be worth it.&lt;/p>
&lt;h2 id="static-hosting-recommendations">Static Hosting Recommendations&lt;/h2>
&lt;p>You do not need a server or Django if you want a static website. I recommend Jekyll and GitHub Pages. The files sync with your GitHub repository, and the process is simple and streamlined. Furthermore, you don&amp;rsquo;t need to manage a server or anything fancy. You can also try Amazon S3, but that is less friendly to beginners.&lt;/p>
&lt;p>Django is a very powerful framework, and you can make almost anything you want. If you&amp;rsquo;re questioning whether it&amp;rsquo;s right for you, I urge you to give it a try. You can then decide what you really want to use. If you don&amp;rsquo;t want to streamline the project bottom up, you can use services like Wix or Squarespace, or WordPress. Those services let you do things like drag and drop, and you don&amp;rsquo;t even need coding to create a very stylish website. They aren&amp;rsquo;t cheap though; you should check your budget to make sure it&amp;rsquo;s the right choice for you. But, it might be worth it, since it makes building the website much faster and easier.&lt;/p></description></item><item><title>Deploying this website [deprecated]</title><link>https://blog.echen.io/p/deploying-this-website-deprecated/</link><pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.echen.io/p/deploying-this-website-deprecated/</guid><description>&lt;blockquote>
&lt;p>Note: &amp;ldquo;this website&amp;rdquo; now refers to my previous blog site, coded with Django. You can find it at &lt;a class="link" href="https://blog.echen.io" target="_blank" rel="noopener"
>blog.echen.io&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>I finally deployed this website! It took a bit longer than I would have liked to write it, but I am happy with the result. I deployed it without using Docker, and it actually saved me a lot of time and frustration compared to my old projects. Take a look at my home website at &lt;a class="link" href="https://echen.io" target="_blank" rel="noopener"
>echen.io&lt;/a> if you would like. It is hosted on Amazon S3 and CloudFront.&lt;/p>
&lt;p>Some details about the creation of this site: This website was built with Django. I used the default SQLite as the database; I didn&amp;rsquo;t really need to use something like PostgreSQL considering these models are quite basic. I used Bootstrap4 for the CSS framework and I have some JQuery for the dark mode and Waypoint.js for the infinite scroll on the homepage. I wasn&amp;rsquo;t able to get infinite scroll for the search page since the page URL would get intertwined with the search query URL, but I&amp;rsquo;ll try to add a &amp;ldquo;next page&amp;rdquo; button or maybe I&amp;rsquo;ll use AJAX if I can.&lt;/p>
&lt;p>The search form logic was created using &lt;a class="link" href="https://github.com/etianen/django-watson" target="_blank" rel="noopener"
>django-watson&lt;/a>. I wasn&amp;rsquo;t able to get the search function to work for the date, but I will probably fix that soon. The icon pack I use is called &lt;a class="link" href="http://feathericons.com/" target="_blank" rel="noopener"
>&amp;ldquo;Feather Icons&amp;rdquo;&lt;/a>, and it looks really clean in my opinion. I&amp;rsquo;ll probably upload this to my GitHub as I have learned how to conceal my secret keys and such, and you guys can take a look at the source code if you would like. About the dark mode: the CSS implementation is just a simple JQuery with an input button. The hard part was creating the toggle and using JQuery&amp;rsquo;s &amp;ldquo;localStorage&amp;rdquo; class to store the user&amp;rsquo;s preference and keep consistency.&lt;/p>
&lt;p>The animation created on the toggle was very difficult to implement across all of the pages, which is why it&amp;rsquo;s only on the homepage. I think it looks better that way, too. Lastly, you might see some images in future posts. It uses the Media library of Django and Pillow for the model field for user upload. I used LetsEncrypt for the SSL certificate, and I learned how to use NGINX Virtual Host, so I can now fit multiple sites on my small Lightsail server. I might learn how to host multiple websites with Docker, but I don&amp;rsquo;t think I will be using Docker that much for websites anymore, as it doesn&amp;rsquo;t really make things easier. I do think it&amp;rsquo;s cool, and I am definitely not using it to its full potential, but it has caused me more problems than it has solved. I like how I can build everything with just one command, and I don&amp;rsquo;t have to mess with the Daemon for Gunicorn or NGINX.&lt;/p>
&lt;p>I can probably deploy websites faster now because of my experience. Crontab is literally the worst in a container though&amp;hellip; I&amp;rsquo;ll try to make some more features on this website along with some of my others. You can check them out on my homepage (look to the bottom). One I didn&amp;rsquo;t include is &lt;a class="link" href="https://news.echen.io" target="_blank" rel="noopener"
>news.echen.io&lt;/a> since it is rather basic and lacks any type of security behind it, but feel free to post stuff on it (I will probably take it down eventually). You can contact me at my email if you have any suggestions or criticism of any of my sites!&lt;/p>
&lt;blockquote>
&lt;p>Do what you can, with what you have, where you are.&lt;/p>
&lt;p>&amp;ndash; &lt;cite>Theodore Roosevelt&lt;/cite>&lt;/p>
&lt;/blockquote></description></item></channel></rss>